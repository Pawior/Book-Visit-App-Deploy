{"version":3,"sources":["contexts/UserContext.js","firebase.js","components/orders/elements/Order.js","components/orders/Orders.js","components/auth/Login.js","components/auth/LoginContainter.js","components/orders/AddOrder.js","components/orders/MyOrders.js","components/orders/elements/TimeSelect.js","components/orders/OrderDetail.js","components/orders/userOrders/UserOrders.js","components/err/Page404.js","components/layout/Navbar.js","components/Home.js","components/App.js","index.js"],"names":["UserContext","createContext","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE__MESSAGING_SENDER_ID","appId","measurementId","app","initializeApp","db","getFirestore","getStorage","Order","props","statusColor","useContext","user","setUser","useState","fullDate","setFullDate","history","useHistory","statusColors","status","useEffect","fDate","date","Date","toString","substr","seconds","Card","className","border","style","width","Header","Badge","bg","position","top","right","backgroundColor","height","Body","Title","title","Text","type","Button","variant","onClick","updateFunction","id","userType","orderInfo","push","pathname","state","clientId","workerId","content","orderID","Orders","userLogged","localStorage","getItem","orders","setOrders","ordersStartDate","setOrdersStartDate","ordersEndDate","setOrdersEndDate","ordersCollectionRef","collection","JSON","parse","getOrders","a","getDocs","data","docs","map","doc","updateOrderWorker","orderId","orderDoc","newFields","updateDoc","window","location","reload","orderList","order","name","description","console","log","initialSettings","startDate","endDate","onCallback","start","end","label","_d","getTime","to","Login","userId","setUserId","email","setEmail","password","setPassword","active","setActive","attemps","setAttemps","error","setError","setRefresh","isMounted","useRef","emailRef","passwordRef","loading","confirmedEmail","setConfirmedEmail","logUserIn","e","preventDefault","document","querySelector","innerHTML","q","query","current","value","where","forEach","info","userDoc","loginAttemps","refreshUserLoginAttemps","userT","q3","q2","newFieldsActive","sendActivationEmail","body","fetch","method","mode","headers","stringify","then","res","json","catch","err","Modal","Dialog","Footer","Form","ref","Group","Label","Control","required","onBlur","disabled","LoginContainer","Container","minHeight","maxWidth","AddOrder","newOrderTitle","setNewOrderTitle","newOrderContent","setNewOrderContent","newOrderDate","setNewOrderDate","newOrderTime","setNewOrderTime","iAmNotARobot","setIAmNotARobot","orderDir","setOrderDir","images","setImages","imageUploadRef","titleEl","dateEl","hourSelectEl","descriptionEl","storage","uploadImagesChange","target","files","Math","random","replace","round","i","length","checkIfAllFieldsAreNotEmpty","createOrder","orderDate","sendConfirmationEmail","hours","substring","indexOf","minutes","image","storageImageRef","uploadBytes","snapshot","addDoc","imagesId","controlId","placeholder","onChange","as","rows","Check","multiple","MyOrders","clear","rangePickerCallback","orderListLen","filter","t","TimeSelect","timeSelectRef","startHourRef","spinnerRef","errorRef","freeTimeDocRef","orderDocRef","minHour","options","parseInt","returnedOptions","option","calculateOrderTime","time","obj","getInfoFromDb","getDoc","docSnap","checkAvailability","dbRes","ourTime","hasOwnProperty","key","sendFreeTimeToDb","delay","Promise","resolve","setTimeout","isEmpty","updateDocStatus","setDoc","merge","display","confirmOrderTime","returnedTimes","getDate","getUTCMonth","getFullYear","toReturn","dbFreeTimeInfo","Spinner","animation","role","OrderDetail","setStatus","informations","bgColor","setBgColor","imageId","setImageId","imageName","setImageName","urlArr","setUrlArr","orderImageRefAll","listAll","items","element","mappedImages","orderImageRef","getDownloadURL","urlArg","src","iterate","left","NODE_SERVER_IP","EMAIL_DONE","orderSnap","orderDone","UserOrders","Page404","Navbar","navContent","href","redirectToMyOrders","logout","redirectToUserOrders","setItem","Home","userL","App","Provider","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e793ac65.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const UserContext = createContext(null);","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABEASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE__MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\nconst firebaseStorage = getStorage(app)\r\nexport { db, firebaseStorage }\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from \"../../../contexts/UserContext\";\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst Order = (props) => {\r\n  const { user, setUser } = useContext(UserContext)\r\n  const [fullDate, setFullDate] = useState(\"\");\r\n  const history = useHistory()\r\n  const statusColors = [\"orange\", \"royalblue\", \"green\"]\r\n  let statusColor;\r\n  if (props.status === \"pending\") {\r\n    statusColor = statusColors[0]\r\n  } else if (props.status === \"in progress\") {\r\n    statusColor = statusColors[1]\r\n  } else {\r\n    statusColor = statusColors[2]\r\n  }\r\n  useEffect(() => {\r\n\r\n\r\n    let fDate;\r\n    if (typeof props.date == \"number\") {\r\n      fDate = new Date(props.date * 1000).toString().substr(0, 21);\r\n      setFullDate(fDate);\r\n    } else {\r\n      fDate = new Date(props.date.seconds * 1000).toString().substr(0, 21);\r\n      setFullDate(fDate);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const redirectToOrderInfo = (orderInfo) => {\r\n    history.push({\r\n      pathname: `/order/${orderInfo.id}`,\r\n      state: {\r\n        id: orderInfo.id,\r\n        date: fullDate,\r\n        title: orderInfo.title,\r\n        clientId: orderInfo.clientId,\r\n        workerId: orderInfo.workerId,\r\n        content: orderInfo.content,\r\n        status: orderInfo.status\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Card\r\n      className=\"mt-4 m-2\"\r\n      border=\"primary\"\r\n      style={{ width: \"18rem\" }}\r\n      key={props.orderID}\r\n    >\r\n      <Card.Header>Zlecenie\r\n        <Badge bg=\"primary\" style={{ position: 'absolute', top: '5px', right: '5px', backgroundColor: statusColor, width: \"5rem\", height: \"1.5rem\" }} >{props.status}</Badge>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        {/* <Card.Text>{props.content}</Card.Text> */}\r\n        <Card.Text>{fullDate}</Card.Text>\r\n\r\n        {props.type == \"allOrders\" ? (\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => props.updateFunction(props.user, props.id)}\r\n          >\r\n            Accept order\r\n          </Button>\r\n\r\n        ) : (\r\n          <>\r\n\r\n            {user.userType == \"worker\" ? <Button\r\n              variant=\"danger\"\r\n              onClick={() => props.updateFunction(props.user, props.id)}\r\n            >\r\n              Decline\r\n            </Button> : null}\r\n            <Button className=\"m-2\" variant=\"info\" onClick={() => redirectToOrderInfo(props)}>Order info</Button>\r\n          </>\r\n\r\n        )}\r\n        {/* <Button className=\"m-2\" variant=\"info\" onClick={() => redirectToOrderInfo(props)}>Order info</Button> */}\r\n\r\n      </Card.Body>\r\n    </Card >\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Order from \"./elements/Order\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\r\n\r\nconst Orders = () => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const userLogged = localStorage.getItem(\"logged\");\r\n  const [orders, setOrders] = useState([]);\r\n  const [ordersStartDate, setOrdersStartDate] = useState();\r\n  const [ordersEndDate, setOrdersEndDate] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const ordersCollectionRef = collection(db, \"orders\");\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n  }, []);\r\n  useEffect(() => {\r\n    const getOrders = async () => {\r\n      const data = await getDocs(ordersCollectionRef);\r\n      setOrders(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    getOrders();\r\n  }, []);\r\n  const updateOrderWorker = async (user, orderId) => {\r\n    // console.log(\"Przesyłanei funkcji \" + user.id);\r\n    // console.log(user);\r\n    // console.log(orderId);\r\n    const orderDoc = doc(db, \"orders\", orderId);\r\n    const newFields = { workerId: user.id };\r\n    await updateDoc(orderDoc, newFields);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const rangePickerCallback = (start, end, label) => {\r\n    // console.log(\"start\", start._d, \"end\", end, \"label\", label);\r\n    const startDate = new Date(start._d);\r\n    const endDate = new Date(end._d);\r\n\r\n    console.log(startDate.getTime(), endDate.getTime());\r\n    setOrdersStartDate(startDate.getTime());\r\n    setOrdersEndDate(endDate.getTime());\r\n  };\r\n  if (!userLogged) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    const orderList = orders.map((order) => {\r\n      if (order.workerId == \"\") {\r\n        if (ordersStartDate) {\r\n          // console.log(\"poczatek:\", ordersStartDate);\r\n          // console.log(\"orderu:\", order.date);\r\n          // console.log(\"koniec:\", ordersEndDate);\r\n          if (\r\n            order.date >= ordersStartDate / 1000 &&\r\n            ordersEndDate / 1000 >= order.date\r\n          ) {\r\n            console.log(\"co jest\");\r\n            return (\r\n              <Order\r\n                title={order.name}\r\n                content={order.description}\r\n                clientId={order.clientId}\r\n                workerId={order.workerId}\r\n                date={order.date}\r\n                status={order.status}\r\n                updateFunction={updateOrderWorker}\r\n                user={user}\r\n                type={\"allOrders\"}\r\n                id={order.id}\r\n                key={order.id}\r\n              ></Order>\r\n            );\r\n          }\r\n        } else {\r\n          return (\r\n            <Order\r\n              title={order.name}\r\n              content={order.description}\r\n              clientId={order.clientId}\r\n              workerId={order.workerId}\r\n              date={order.date}\r\n              status={order.status}\r\n              updateFunction={updateOrderWorker}\r\n              user={user}\r\n              type={\"allOrders\"}\r\n              id={order.id}\r\n              key={order.id}\r\n            ></Order>\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <DateRangePicker\r\n          initialSettings={{ startDate: \"10/1/2021\", endDate: \"10/31/2021\" }}\r\n          onCallback={rangePickerCallback}\r\n        >\r\n          <button>Click Me To Open Picker!</button>\r\n        </DateRangePicker>\r\n        {orderList}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function Login() {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [active, setActive] = useState(true);\r\n  const [attemps, setAttemps] = useState(3);\r\n  const [error, setError] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const isMounted = useRef(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const userType = useRef();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [confirmedEmail, setConfirmedEmail] = useState();\r\n\r\n  const logUserIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(userType.current.value);\r\n    document.querySelector(\".login-info\").innerHTML = \"\";\r\n    setAttemps(attemps - 1);\r\n    let q = query(\r\n      collection(db, `${userType.current.value}s`),\r\n      where(\"email\", \"==\", emailRef.current.value),\r\n      where(\"password\", \"==\", passwordRef.current.value)\r\n    );\r\n    let querySnapshot = await getDocs(q);\r\n    // console.log(querySnapshot);\r\n    querySnapshot.forEach(async (info) => {\r\n      // console.log(info.id, \" => \", info.data());\r\n      await setUserId(info.id);\r\n      await setAttemps(3);\r\n      await setActive(true);\r\n      await setEmail(info.data().email);\r\n\r\n      const userDoc = doc(db, `${userType.current.value}s`, info.id);\r\n      const newFields = { loginAttemps: 3, active: true };\r\n      await updateDoc(userDoc, newFields);\r\n      await setPassword(info.data().password);\r\n    });\r\n    await setRefresh(true);\r\n    await setError(true);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"active:\", active, \"attemps:\", attemps);\r\n  //   // console.log(confirmedEmail);\r\n  // });\r\n\r\n  const refreshUserLoginAttemps = () => {\r\n    // console.log(emailRef.current.value);\r\n    setConfirmedEmail(emailRef.current.value);\r\n    const users = [\"workers\", \"clients\"];\r\n    users.forEach(async (userT) => {\r\n      let q3 = query(\r\n        collection(db, userT),\r\n        where(\"email\", \"==\", emailRef.current.value)\r\n      );\r\n      let querySnapshot3 = await getDocs(q3);\r\n      querySnapshot3.forEach(async (info) => {\r\n        // setAttemps(info.data().loginAttemps);\r\n        const userDoc = doc(db, userT, info.id);\r\n        // console.log(info.data().loginAttemps);\r\n        await setAttemps(info.data().loginAttemps);\r\n        await setActive(info.data().active);\r\n        // console.log(info.id, \" => \", info.data());\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      // console.log(\"local attemps\", attemps);\r\n      //---- updating user login attemps ----\r\n      const users = [\"workers\", \"clients\"];\r\n      users.forEach(async (userT) => {\r\n        // console.log(userT);\r\n        let q2 = query(\r\n          collection(db, userT),\r\n          where(\"email\", \"==\", emailRef.current.value)\r\n        );\r\n        let querySnapshot2 = await getDocs(q2);\r\n        querySnapshot2.forEach(async (info) => {\r\n          // setAttemps(info.data().loginAttemps);\r\n          const userDoc = doc(db, userT, info.id);\r\n          // console.log(info.data().loginAttemps);\r\n          // if (info.data().loginAttemps === 1) {\r\n          //   const newFieldsActive = { active: false };\r\n          //   await updateDoc(userDoc, newFieldsActive);\r\n          // } else {\r\n          const newFields = { loginAttemps: attemps };\r\n          await updateDoc(userDoc, newFields);\r\n          // }\r\n          if (info.data().loginAttemps <= 0) {\r\n            const newFieldsActive = { active: false };\r\n            await updateDoc(userDoc, newFieldsActive);\r\n            const newFields = { loginAttemps: attemps };\r\n            await updateDoc(userDoc, newFields);\r\n          }\r\n          // console.log(info.id, \" => \", info.data());\r\n        });\r\n      });\r\n    }\r\n  }, [attemps]);\r\n\r\n  // useEffect(() => {\r\n  //   setAttemps(attemps - 1);\r\n  // }, [])\r\n  const sendActivationEmail = async (email) => {\r\n    // console.log(email);\r\n    const body = { email: email };\r\n    // console.log(body);\r\n\r\n    const data = fetch(\"http://localhost:5000/send-email\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json))\r\n      .catch((err) => console.log(err));\r\n\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (isMounted.current && active == true) {\r\n      // sprytne żeby useEffect się nie wykonywał na starcie\r\n      // console.log(\"dziala\");\r\n      // console.log(email);\r\n      // console.log(password);\r\n      await setUser({\r\n        id: userId,\r\n        email: email,\r\n        password: password,\r\n        userType: userType.current.value,\r\n      });\r\n      setAttemps(3);\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n    // console.log(email, password, active, attemps);\r\n  }, [password]);\r\n\r\n  if (user && active == true) {\r\n    return <Redirect to=\"/\" />;\r\n  } else if (active == false) {\r\n    return (\r\n      <Modal.Dialog>\r\n        <Modal.Header>\r\n          <Modal.Title>This account is not active</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <p>\r\n            Click \"send activation email\" and click activation link on our email\r\n            or go back to login page.\r\n          </p>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => sendActivationEmail(confirmedEmail)}\r\n          >\r\n            Send activation email\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n              history.push({ pathname: \"/login\" });\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Go back to login\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Log In</h2>\r\n\r\n            <Form>\r\n              <h3>Log as</h3>\r\n              <select ref={userType}>\r\n                <option>client</option>\r\n                <option>worker</option>\r\n              </select>\r\n\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  ref={emailRef}\r\n                  required\r\n                  onBlur={() => refreshUserLoginAttemps()}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  ref={passwordRef}\r\n                  required\r\n                  onBlur={() => refreshUserLoginAttemps()}\r\n                />\r\n              </Form.Group>\r\n              <p className=\"login-info\"></p>\r\n              {error ? (\r\n                <div> Wrong password or email! Left attemps: {attemps}</div>\r\n              ) : null}\r\n              <Button\r\n                disabled={loading}\r\n                className=\"w-100 mt-4\"\r\n                type=\"submit\"\r\n                onClick={logUserIn}\r\n                required\r\n                onBlur={() => refreshUserLoginAttemps()}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Login from \"./Login\";\r\n\r\n\r\nconst LoginContainer = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"60vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"500px\" }}>\r\n          <Login> </Login>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\r\nimport \"./AddOrder.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\n\r\nimport { db, firebaseStorage } from \"../../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { getStorage, ref, getMetadata, getDownloadURL, uploadBytes } from \"firebase/storage\"\r\n\r\nconst AddOrder = () => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const ordersCollectionRef = collection(db, \"orders\");\r\n  const [newOrderTitle, setNewOrderTitle] = useState(\"\");\r\n  const [newOrderContent, setNewOrderContent] = useState(\"\");\r\n  const [newOrderDate, setNewOrderDate] = useState(\"\");\r\n  const [newOrderTime, setNewOrderTime] = useState(\"\");\r\n  const [iAmNotARobot, setIAmNotARobot] = useState(false);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [orderDir, setOrderDir] = useState(0)\r\n  const [images, setImages] = useState([])\r\n  const imageRef = useRef(null)\r\n  const imageUploadRef = useRef(null)\r\n  const titleEl = useRef(null);\r\n  const dateEl = useRef(null);\r\n  const hourSelectEl = useRef(null);\r\n  const descriptionEl = useRef(null);\r\n\r\n  const storage = getStorage()\r\n  // const storageRef = ref(storage, \"images/serce.jpg\")\r\n  // const starsRef = storageRef.child('images/');\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const hearthRef = ref(storage, 'images/serce-grafika.jpg')\r\n  //   console.log(hearthRef)\r\n  //   console.log(hearthRef)\r\n  //   console.log(imageRef)\r\n  //   getDownloadURL(hearthRef).then((urlArg) => {\r\n  //     console.log(urlArg)\r\n  //     imageRef.current.src = urlArg\r\n  //   }).catch((err) => {\r\n  //     console.log(err)\r\n  //   })\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(imageUploadRef)\r\n  }, [imageUploadRef.current])\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem(\"user\")))\r\n  }, [])\r\n\r\n  const uploadImagesChange = async (e) => {\r\n    console.log(e.target.files)\r\n    setOrderDir(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 15) + Math.round(Math.random() * 10000));\r\n    console.log(orderDir)\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      // setImages((prevState) => [...prevState, e.target.files[i]])\r\n      await setImages([...images, e.target.files[i]])\r\n    }\r\n    console.log(images)\r\n  }\r\n\r\n  const uploadImagesOnClick = () => {\r\n\r\n    images.forEach((image) => {\r\n      let storageImageRef = ref(storage, `images/${orderDir}/${image.name}`)\r\n      uploadBytes(storageImageRef, image).then((snapshot) => {\r\n        console.log(\"file uploaded!\")\r\n      }).catch(err => console.log(err))\r\n\r\n    })\r\n  }\r\n\r\n  const checkIfAllFieldsAreNotEmpty = () => {\r\n    if (!newOrderTitle || !newOrderContent || !newOrderTime || !newOrderTime) {\r\n      console.log(\"Fields must be no empty\");\r\n      document.querySelector(\".form-errors\").innerHTML =\r\n        \"<span class='form-error'>Fields must not be empty!</span>\";\r\n      return true;\r\n    } else if (!iAmNotARobot) {\r\n      document.querySelector(\".form-errors\").innerHTML =\r\n        \"<span class='form-error'>Confirm you are not a robot!</span>\";\r\n      return true;\r\n    } else {\r\n      document.querySelector(\".form-errors\").innerHTML =\r\n        \"<span class='form-success'>Success!</span>\";\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const createOrder = async (e) => {\r\n    e.preventDefault();\r\n    await checkIfAllFieldsAreNotEmpty();\r\n\r\n    let isError = await checkIfAllFieldsAreNotEmpty();\r\n    if (isError) {\r\n      const orderDate = new Date(newOrderDate);\r\n      var seconds = orderDate.getTime() / 1000;\r\n      seconds = seconds - 7200;\r\n    } else {\r\n      console.log(\"success\");\r\n      sendConfirmationEmail()\r\n      // ---- calculating time ----\r\n      let hours = newOrderTime.substring(0, newOrderTime.indexOf(\":\"));\r\n      let minutes = newOrderTime.substring(newOrderTime.indexOf(\":\") + 1);\r\n      hours = hours * 3600;\r\n      minutes = minutes * 60;\r\n\r\n      const orderDate = new Date(newOrderDate);\r\n      var seconds = orderDate.getTime() / 1000;\r\n      seconds = seconds - 7200;\r\n\r\n      // ---- adding time to the date value ----\r\n      seconds = seconds + hours + minutes;\r\n      // ---- uploading images to database ----\r\n      await uploadImagesOnClick();\r\n      // ---- sending new record to database ----\r\n      await addDoc(ordersCollectionRef, {\r\n        name: newOrderTitle,\r\n        description: newOrderContent,\r\n        date: seconds,\r\n        status: \"pending\",\r\n        clientId: user.id,\r\n        workerId: \"\",\r\n        imagesId: orderDir\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // const buttonHandler = () => { };\r\n  const sendConfirmationEmail = async () => {\r\n    const body = {\r\n      email: user.email,\r\n      title: newOrderTitle,\r\n      description: newOrderContent,\r\n      date: newOrderDate,\r\n      clientId: user.id\r\n    };\r\n    const data = await fetch(\"http://localhost:5000/confirmation-email\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json())\r\n      .then((json) => console.log(json))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <Form className=\"m-2 addOrder mt-5\">\r\n          <h1 className=\"page-title display-3\">\r\n            <strong>Add Order</strong>\r\n          </h1>\r\n          <br />\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\r\n            <Form.Label>Order title</Form.Label>\r\n            <Form.Control\r\n              ref={titleEl}\r\n              type=\"text\"\r\n              placeholder=\"Enter order title\"\r\n              className=\"order-title\"\r\n              onChange={(e) => setNewOrderTitle(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">Chose a wise one</Form.Text>\r\n          </Form.Group>\r\n          <Form.Control\r\n            ref={dateEl}\r\n            type=\"date\"\r\n            name=\"date_of_visit\"\r\n            className=\"order-date\"\r\n            onChange={(e) => setNewOrderDate(e.target.value)}\r\n          />\r\n\r\n          <select\r\n            ref={hourSelectEl}\r\n            className=\"time-select\"\r\n            className=\"order-time\"\r\n            onChange={async (e) => {\r\n              setNewOrderTime(e.target.value);\r\n            }}\r\n          >\r\n            <option>Choose hour</option>\r\n            <option>8:00</option>\r\n            <option>9:00</option>\r\n            <option>10:00</option>\r\n            <option>11:00</option>\r\n            <option>12:00</option>\r\n            <option>13:00</option>\r\n            <option>14:00</option>\r\n            <option>15:00</option>\r\n            <option>16:00</option>\r\n            <option>17:00</option>\r\n          </select>\r\n          <Form.Group className=\"mb-3\" controlId=\"formControlTextarea\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              ref={descriptionEl}\r\n              as=\"textarea\"\r\n              rows={3}\r\n              className=\"order-content\"\r\n              onChange={(e) => setNewOrderContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"I am not a robot\"\r\n              onClick={() => setIAmNotARobot(!iAmNotARobot)}\r\n            />\r\n          </Form.Group>\r\n          {/* <Button variant=\"primary\" onClick={(e) => e.preventDefault()}> */}\r\n          <p className=\"form-errors\"></p>\r\n          <Button variant=\"primary\" onClick={createOrder}>\r\n            Submit\r\n          </Button>\r\n          {/* <img ref={imageRef}></img> */}\r\n          <input id=\"upload-photo\" type=\"file\" name=\"upload-file\" multiple ref={imageUploadRef} onChange={uploadImagesChange} />\r\n        </Form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default AddOrder;\r\n","import React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Order from \"./elements/Order\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\r\n\r\nconst MyOrders = (props) => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const userLogged = localStorage.getItem(\"logged\");\r\n  const [ordersStartDate, setOrdersStartDate] = useState();\r\n  const [ordersEndDate, setOrdersEndDate] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const ordersCollectionRef = collection(db, \"orders\");\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n  }, []);\r\n  useEffect(() => {\r\n    const getOrders = async () => {\r\n      const data = await getDocs(ordersCollectionRef);\r\n      setOrders(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    getOrders();\r\n    console.clear();\r\n  }, []);\r\n\r\n\r\n\r\n  const updateOrderWorker = async (user, orderId) => {\r\n    const orderDoc = doc(db, \"orders\", orderId);\r\n    const newFields = { workerId: \"\", status: \"pending\" };\r\n    await updateDoc(orderDoc, newFields);\r\n    window.location.reload();\r\n  };\r\n\r\n  const rangePickerCallback = (start, end, label) => {\r\n    console.log(\"start\", start._d, \"end\", end, \"label\", label);\r\n    const startDate = new Date(start._d);\r\n    const endDate = new Date(end._d);\r\n\r\n    console.log(startDate.getTime(), endDate.getTime());\r\n    setOrdersStartDate(startDate.getTime());\r\n    setOrdersEndDate(endDate.getTime());\r\n  };\r\n  if (!userLogged) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    let orderListLen = 0;\r\n    const orderList = orders.map((order) => {\r\n      if (order.workerId === props.location.state.workerId) {\r\n        if (ordersStartDate) {\r\n          if (\r\n            order.date >= ordersStartDate / 1000 &&\r\n            ordersEndDate / 1000 >= order.date\r\n          ) {\r\n            orderListLen++;\r\n            return (\r\n              <Order\r\n                title={order.name}\r\n                content={order.description}\r\n                clientId={order.clientId}\r\n                workerId={order.workerId}\r\n                date={order.date}\r\n                status={order.status}\r\n                user={user}\r\n                id={order.id}\r\n                key={order.id}\r\n                updateFunction={updateOrderWorker}\r\n              />\r\n            );\r\n          }\r\n        } else {\r\n          orderListLen++;\r\n          return (\r\n            <Order\r\n              title={order.name}\r\n              content={order.description}\r\n              clientId={order.clientId}\r\n              workerId={order.workerId}\r\n              date={order.date}\r\n              status={order.status}\r\n              user={user}\r\n              id={order.id}\r\n              key={order.id}\r\n              updateFunction={updateOrderWorker}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    });\r\n    console.log(\"orderList:\", orderList)\r\n    return orderListLen ? (\r\n      <div>\r\n        <DateRangePicker\r\n          initialSettings={{ startDate: \"10/1/2021\", endDate: \"10/31/2021\" }}\r\n          onCallback={rangePickerCallback}\r\n        >\r\n          <button>Click Me To Open Picker!</button>\r\n        </DateRangePicker>\r\n        <div className=\"d-flex\">\r\n          <div>{orderList.filter(t => t ? t.props.status === \"pending\" : null)}</div>\r\n          <div>{orderList.filter(t => t ? t.props.status === \"in progress\" : null)}</div>\r\n          <div>{orderList.filter(t => t ? t.props.status === \"done\" : null)}</div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <DateRangePicker\r\n          initialSettings={{ startDate: \"10/1/2021\", endDate: \"10/31/2021\" }}\r\n          onCallback={rangePickerCallback}\r\n        >\r\n          <button>Click Me To Open Picker!</button>\r\n        </DateRangePicker>\r\n        <h2>All orders are done!</h2>\r\n      </div>\r\n    );\r\n    // return <div>{orderList}</div>;\r\n  }\r\n};\r\n\r\nexport default MyOrders;\r\n","import React, { useRef, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { db } from \"../../../firebase\";\r\nimport { doc, setDoc, collection, updateDoc, getDocs, getDoc } from \"firebase/firestore\";\r\nimport { isEmpty, stringify } from '@firebase/util';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nconst TimeSelect = (props) => {\r\n    const timeSelectRef = useRef()\r\n    const startHourRef = useRef()\r\n    const spinnerRef = useRef()\r\n    const errorRef = useRef()\r\n    const freeTimeCollectionRef = collection(db, \"freeTime\")\r\n    const freeTimeDocRef = doc(db, \"freeTime\", props.workerId)\r\n    const orderDocRef = doc(db, \"orders\", props.orderId)\r\n\r\n\r\n    let minHour = props.minHour\r\n    minHour = parseInt(minHour.substr(16, 2))\r\n    const options = []\r\n    for (let i = minHour; i <= 17; i++) {\r\n        // console.log(i)\r\n        options.push(`${i}:00`)\r\n    }\r\n\r\n    const returnedOptions = options.map((option) => { // ---- returning available start hours options ----\r\n        return (\r\n            <option value={option}>{option}</option>\r\n        )\r\n    })\r\n    const calculateOrderTime = (start, time) => { // ---- function used to calculate workers busy time taking 15min breaks each hour ----\r\n        const obj = {}\r\n        for (; ;) {\r\n            if (time > 45) {\r\n                obj[start] = 45\r\n                start++\r\n                time = time - 45\r\n            } else if (time <= 45 && time > 0) {\r\n                obj[start] = time\r\n                time = 0\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return obj\r\n    }\r\n    const getInfoFromDb = async () => { // ---- function used to get DB docs informations ----\r\n        const docSnap = await getDoc(freeTimeDocRef)\r\n        return docSnap.data()\r\n    }\r\n\r\n    const checkAvailability = (dbRes, ourTime, date) => { // ---- function to check if the times is database and user times do not colidate ----\r\n        console.log(ourTime)\r\n        if (dbRes.hasOwnProperty(date)) {\r\n            let hasOwn = false\r\n\r\n            for (let key in dbRes[date]) {\r\n                // ---- finding if the key exists in the time passed by worker ----\r\n                if (ourTime[date][key]) {\r\n                    ourTime[date][key] = ourTime[date][key] + dbRes[date][key]\r\n                    console.log(dbRes[date][key])\r\n                    console.log(ourTime[date][key])\r\n                    // ---- key exists, but worker should have 15 min rest each hour, cannot accept this time ----\r\n                    if (ourTime[date][key] > 45) {\r\n                        return {}\r\n                    }\r\n                    console.log('posiada')\r\n                    hasOwn = true\r\n                }\r\n            }\r\n\r\n            // ---- everything is ok, time is actualized ----\r\n            return ourTime\r\n            // ---- times do not colidate with each other ----\r\n        } else {\r\n            return ourTime\r\n        }\r\n\r\n    }\r\n    const sendFreeTimeToDb = async (data) => {\r\n        // ---- Funkcja opózniająca zawiera w sobie promise, \r\n        // który po upłynięcia x czasu ( podane w parametrze ), kończy się sukcesem i\r\n        // i wywołuję to co po .then, czyli zwraca error jeżeli godzina jest już zajęta  ---\r\n        // ----\r\n        function delay(time) {\r\n            return new Promise(resolve => setTimeout(resolve, time)).then(() => {\r\n                console.log(data)\r\n                if (isEmpty(data)) {\r\n                    console.log('nie można')\r\n                    errorRef.current.innerHTML = \"Nie możesz zaakceptować tych opcji. Jesteś wtedy zajęty!\"\r\n                } else {\r\n                    errorRef.current.innerHTML = \"\"\r\n                    console.log('można')\r\n                    updateDocStatus();\r\n                    setDoc(freeTimeDocRef, data, { merge: true })\r\n                    setTimeout(function () {\r\n                        window.location.reload()  // ---- refreshing page to get actual status ----\r\n                    }, 500)\r\n\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n        await delay(1000); // wywoałnie promise, opóźniającego o sekunde\r\n        spinnerRef.current.style.display = \"none\";\r\n\r\n    }\r\n    const confirmOrderTime = async () => {\r\n        console.log(spinnerRef)\r\n        spinnerRef.current.style.display = \"block\";\r\n        const returnedTimes = calculateOrderTime(parseInt(startHourRef.current.value), parseInt(timeSelectRef.current.value))\r\n        const date = new Date(Date.parse(props.minHour))\r\n        const fullDate = `${date.getDate()}.${date.getUTCMonth() + 1}.${date.getFullYear()}`\r\n        let toReturn = {}\r\n\r\n        toReturn[fullDate] = returnedTimes\r\n        const dbFreeTimeInfo = await getInfoFromDb()\r\n\r\n        toReturn = await checkAvailability(dbFreeTimeInfo, toReturn, fullDate)\r\n        await sendFreeTimeToDb(toReturn)\r\n\r\n    }\r\n\r\n    const updateDocStatus = async () => {\r\n        const newFields = { status: \"in progress\" }\r\n        await updateDoc(orderDocRef, newFields)\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Chose realization start hour: </h5>\r\n            <select ref={startHourRef}>\r\n                {returnedOptions}\r\n            </select>\r\n            <h5>Select how much time do you need to realize this order:</h5>\r\n            <select ref={timeSelectRef}\r\n                className=\"time-select\"\r\n            >\r\n                <option>5min</option>\r\n                <option>10min</option>\r\n                <option>15min</option>\r\n                <option>20min</option>\r\n                <option>25min</option>\r\n                <option>30min</option>\r\n                <option>35min</option>\r\n                <option>40min</option>\r\n                <option>50min</option>\r\n                <option>55min</option>\r\n                <option>60min</option>\r\n                <option>75min</option>\r\n                <option>90min</option>\r\n                <option>120min</option>\r\n                <option>150min</option>\r\n                <option>180min</option>\r\n                <option>240min</option>\r\n                <option>300min</option>d\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <Button variant=\"primary\" onClick={() => confirmOrderTime()}>Confirm time</Button>\r\n            <Spinner style={{ display: \"none\" }} ref={spinnerRef} animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n            <p className=\"add-to-db-error\" ref={errorRef}></p>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TimeSelect\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport \"./OrderDetail.css\"\r\nimport TimeSelect from './elements/TimeSelect'\r\nimport { UserContext } from '../../contexts/UserContext'\r\nimport { db, firebaseStorage } from \"../../firebase\";\r\nimport { getDoc, doc, updateDoc } from \"firebase/firestore\"\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { getStorage, ref, getMetadata, getDownloadURL, uploadBytes, listAll } from \"firebase/storage\"\r\n\r\nconst OrderDetail = (props) => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [status, setStatus] = useState(\"pending\")\r\n    const informations = props.history.location.state\r\n    const statusColors = [\"orange\", \"royalblue\", \"green\"]\r\n    const [bgColor, setBgColor] = useState(\"\")\r\n    const [imageId, setImageId] = useState(\"\")\r\n    const [imageName, setImageName] = useState([])\r\n    const [urlArr, setUrlArr] = useState([])\r\n    let statusColor;\r\n\r\n\r\n    const storage = getStorage()\r\n    // const storageRef = ref(storage, \"images/serce.jpg\")\r\n\r\n    useEffect(() => {\r\n        const orderImageRefAll = ref(storage, `images/${imageId}`)\r\n        listAll(orderImageRefAll).then(res => {\r\n            res.items.forEach(element => {\r\n                console.log(element.name)\r\n                setImageName([...imageName, element.name])\r\n            });\r\n            // console.log(res.items[0].name)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n        // console.log(orderImageRef.child(path: orderImageRef.name))\r\n        //console.log(child(orderImageRef.name))\r\n        console.log(imageName)\r\n        // console.log(imageRef)\r\n        let mappedImages = imageName.map((element) => {\r\n            console.log(\"mapped images \")\r\n            let orderImageRef = ref(storage, `images/${imageId}/${element}`)\r\n            getDownloadURL(orderImageRef).then((urlArg) => {\r\n                console.log(urlArg)\r\n                // imageRef.current.src = urlArg\r\n                return (\r\n                    <img src={urlArg} />\r\n                )\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        })\r\n        console.log(mappedImages)\r\n        // img src={}\r\n    }, [imageId])\r\n\r\n\r\n    // const mappedImages = imageName.map((element) => {\r\n    //     console.log(\"mapped images \")\r\n    //     console.log(element)\r\n    //     let orderImageRef = ref(storage, `images/${imageId}/${element}`)\r\n    //     return (\r\n    //         <img src={urlArg} />\r\n    //     )\r\n    // })\r\n    let iterate = -1;\r\n    const mappedImages = urlArr.map((element) => {\r\n        console.log(\"mapped images \")\r\n        console.log(element)\r\n        let orderImageRef = ref(storage, `images/${imageId}/${element}`)\r\n        iterate++\r\n        return (\r\n            <img src={element} className=\"order-images\" style={{ left: `${iterate * 150}px` }} />\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n        imageName.forEach((element) => {\r\n            let orderImageRef = ref(storage, `images/${imageId}/${element}`)\r\n            getDownloadURL(orderImageRef).then((urlArg) => {\r\n                console.log(urlArg)\r\n                // imageRef.current.src = urlArg\r\n                // setUrlArr([...urlArr, urlArg])\r\n                setUrlArr(urlArr => [urlArg, ...urlArr]);\r\n                // return (\r\n                //     <img src={urlArg} />\r\n                // )\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n        })\r\n        console.log(urlArr)\r\n    }, [imageName])\r\n\r\n    useEffect(() => {\r\n        console.log(urlArr)\r\n    }, [urlArr])\r\n\r\n    // console.log(mappedImages)\r\n\r\n    useEffect(async () => {\r\n        // console.log(\"useEffect dziala\", bgColor)\r\n        // console.log(informations.status)\r\n        // console.log(informations.status)\r\n        // console.log(status)\r\n        if (status === \"pending\") {\r\n            setBgColor(statusColors[0])\r\n        } else if (status === \"in progress\") {\r\n            setBgColor(statusColors[1])\r\n        } else {\r\n            setBgColor(statusColors[2])\r\n            const body = {\r\n                email: user.email,\r\n                title: informations.title,\r\n                description: informations.content,\r\n                date: informations.date,\r\n                clientId: user.id\r\n            }\r\n            const data = await fetch(`${process.env.NODE_SERVER_IP}${process.env.EMAIL_DONE}`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(body),\r\n            }).then((res) => res.json())\r\n                .then((json) => console.log(json))\r\n                .catch((err) => console.log(err));\r\n        }\r\n    }, [status])\r\n    // if (informations.status === \"pending\") {\r\n    //     statusColor = statusColors[0]\r\n    // } else if (informations.status === \"in progress\") {\r\n    //     statusColor = statusColors[1]\r\n    // } else {\r\n    //     statusColor = statusColors[2]\r\n    // }\r\n\r\n\r\n    useEffect(async () => {\r\n        const orderDocRef = await doc(db, \"orders\", informations.id)\r\n        const orderSnap = await getDoc(orderDocRef)\r\n        // console.log(orderSnap.data())\r\n        setStatus(orderSnap.data().status)\r\n        setImageId(orderSnap.data().imagesId)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem(\"user\")))\r\n        // console.log(user)\r\n    }, [])\r\n\r\n    const orderDone = async () => {\r\n        const orderDocRef = await doc(db, \"orders\", informations.id)\r\n        const orderSnap = await getDoc(orderDocRef)\r\n        const newFields = { status: \"done\" }\r\n        informations.status = \"done\"\r\n        setStatus(\"done\")\r\n        await updateDoc(orderDocRef, newFields);\r\n\r\n    }\r\n    if (!user) {\r\n        return null\r\n    } else {\r\n\r\n\r\n        return (\r\n            <div id=\"OrderDetailContainer\">\r\n                <Container className=\"d-flex justify-content-center align-items-center h-100\" >\r\n                    <Card border=\"info\" style={{ width: '70rem', height: \"35rem\" }}>\r\n                        <Card.Header className=\"card-title\">\r\n                            <Card.Title><h1> {informations.title} </h1></Card.Title></Card.Header>\r\n                        {/* {status === \"pending\"?<Card.Body className=\"\">: <Card.Body className=\"d-flex\">} */}\r\n                        <h2>Description:</h2>\r\n                        <Card.Text > {informations.content}</Card.Text>\r\n                        <Card.Body className=\"d-flex car\">\r\n\r\n                            <Badge className=\"status-badge\" bg=\"primary\" style={{ position: 'absolute', top: '10px', right: '50px', backgroundColor: bgColor, width: \"10rem\", height: \"2.5rem\" }} >{status}</Badge>\r\n                            {/* <Card.Title>Info Card Title</Card.Title> */}\r\n                            {/* <Card.Text> */}\r\n\r\n                            {/* {informations.content} {informations.status} */}\r\n                            {/* </Card.Text>\r\n                        <Card.Text>\r\n                            {informations.workerId ? informations.workerId : null}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            {informations.clientId ? informations.clientId : null}\r\n                        </Card.Text> */}\r\n                            {/* <Card.Text>\r\n\r\n                        </Card.Text> */}\r\n                            {user.userType ?\r\n                                <>\r\n                                    {\r\n                                        user.userType === \"worker\" ?\r\n                                            <>\r\n                                                {status === \"pending\" ? <TimeSelect className=\"m-0 align-self-end card-beggin\" minHour={informations.date} workerId={informations.workerId} orderId={informations.id} /> : null}\r\n                                                {status === \"in progress\" ? <Button className=\"align-self-center\" style={{ width: \"230px\", height: \"50px\" }} variant=\"success\" onClick={() => orderDone()}> Done </Button> : null}\r\n                                            </>\r\n\r\n                                            : null\r\n\r\n                                    } </> : null}\r\n\r\n\r\n                            {/* <Card.Text>\r\n                            <h2>Description</h2>\r\n                            \r\n                        </Card.Text> */}\r\n                            {mappedImages ? mappedImages : null}\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                </Container>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default OrderDetail\r\n","import React, { useState, useEffect, useLayoutEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../../contexts/UserContext\";\r\nimport { db } from \"../../../firebase\";\r\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Order from \".././elements/Order\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\r\n\r\nconst UserOrders = (props) => {\r\n    const { user, setUser } = useContext(UserContext);\r\n    const [orders, setOrders] = useState([]);\r\n    const [clientID, setClientID] = useState(\"\")\r\n    const userLogged = localStorage.getItem(\"logged\");\r\n    const [ordersStartDate, setOrdersStartDate] = useState();\r\n    const [ordersEndDate, setOrdersEndDate] = useState(null);\r\n\r\n    const history = useHistory();\r\n    const ordersCollectionRef = collection(db, \"orders\");\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n        // await setClientID(user.id)\r\n        // await props.history.location.clientId = user.id\r\n    }, []);\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            const data = await getDocs(ordersCollectionRef);\r\n            setOrders(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n        };\r\n        getOrders();\r\n        console.clear();\r\n    }, []);\r\n\r\n\r\n\r\n    const updateOrderWorker = async (user, orderId) => {\r\n        const orderDoc = doc(db, \"orders\", orderId);\r\n        const newFields = { workerId: \"\", status: \"pending\" };\r\n        await updateDoc(orderDoc, newFields);\r\n        window.location.reload();\r\n    };\r\n\r\n    const rangePickerCallback = (start, end, label) => {\r\n        console.log(\"start\", start._d, \"end\", end, \"label\", label);\r\n        const startDate = new Date(start._d);\r\n        const endDate = new Date(end._d);\r\n\r\n        console.log(startDate.getTime(), endDate.getTime());\r\n        setOrdersStartDate(startDate.getTime());\r\n        setOrdersEndDate(endDate.getTime());\r\n    };\r\n    if (!userLogged) {\r\n        return <Redirect to=\"/login\" />;\r\n    } else {\r\n        let orderListLen = 0;\r\n        const orderList = orders.map((order) => {\r\n            if (order.clientId === user.id) {\r\n                if (ordersStartDate) {\r\n                    if (\r\n                        order.date >= ordersStartDate / 1000 &&\r\n                        ordersEndDate / 1000 >= order.date\r\n                    ) {\r\n                        orderListLen++;\r\n                        return (\r\n                            <Order\r\n                                title={order.name}\r\n                                content={order.description}\r\n                                clientId={order.clientId}\r\n                                workerId={order.workerId}\r\n                                date={order.date}\r\n                                status={order.status}\r\n                                user={user}\r\n                                id={order.id}\r\n                                key={order.id}\r\n                                updateFunction={updateOrderWorker}\r\n                            />\r\n                        );\r\n                    }\r\n                } else {\r\n                    orderListLen++;\r\n                    return (\r\n                        <Order\r\n                            title={order.name}\r\n                            content={order.description}\r\n                            clientId={order.clientId}\r\n                            workerId={order.workerId}\r\n                            date={order.date}\r\n                            status={order.status}\r\n                            user={user}\r\n                            id={order.id}\r\n                            key={order.id}\r\n                            updateFunction={updateOrderWorker}\r\n                        />\r\n                    );\r\n                }\r\n\r\n            }\r\n        });\r\n        return orderListLen ? (\r\n            <div>\r\n                <DateRangePicker\r\n                    initialSettings={{ startDate: \"10/1/2021\", endDate: \"10/31/2021\" }}\r\n                    onCallback={rangePickerCallback}\r\n                >\r\n                    <button>Click Me To Open Picker!</button>\r\n                </DateRangePicker>\r\n                {orderList}\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <DateRangePicker\r\n                    initialSettings={{ startDate: \"10/1/2021\", endDate: \"10/31/2021\" }}\r\n                    onCallback={rangePickerCallback}\r\n                >\r\n                    <button>Click Me To Open Picker!</button>\r\n                </DateRangePicker>\r\n                <h2>You have not sended any orders!</h2>\r\n            </div>\r\n        );\r\n        // return <div>{orderList}</div>;\r\n    }\r\n};\r\n\r\nexport default UserOrders;\r\n","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Page404 = () => {\r\n    const history = useHistory()\r\n    const redirectToHome = () => {\r\n        history.push({ pathname: '/' })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Page not found!</h1>\r\n            <button onClick={redirectToHome}>Home page</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404\r\n","import React, { useContext } from 'react'\r\nimport './Navbar.css'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { UserContext } from '../../contexts/UserContext'\r\n\r\nconst Navbar = () => {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const history = useHistory()\r\n    // console.log(user)\r\n    // if (user) {\r\n    //     console.log(user)\r\n    // }\r\n    let navContent\r\n    if (user) {\r\n        if (user.userType === \"worker\") {\r\n            navContent = (\r\n                <ul>\r\n                    <li><a href=\"/orders\">All orders</a></li>\r\n                    <li><a onClick={() => redirectToMyOrders()} href=\"\">My orders</a></li>\r\n                    <li><a onClick={() => logout()} href=\"\">Logout</a></li>\r\n                </ul>\r\n            )\r\n        } else {\r\n            navContent = (\r\n                <ul>\r\n                    <li><a href=\"/addorder\">Add order</a></li>\r\n                    <li><a onClick={() => redirectToUserOrders()} href=\"\">My orders</a></li>\r\n                    <li><a onClick={() => logout()} href=\"\">Logout</a></li>\r\n                </ul>\r\n            )\r\n        }\r\n    } else {\r\n        navContent = (<h1>Welcome to Book Visit App</h1>)\r\n    }\r\n\r\n    const redirectToMyOrders = () => {\r\n        history.push({\r\n            pathname: `/myorders/${user.id}`,\r\n            state: { workerId: user.id }\r\n        })\r\n    }\r\n    const redirectToUserOrders = () => {\r\n        history.push({\r\n            pathname: `/user-orders/${user.id}`,\r\n            state: { clientId: user.id }\r\n        })\r\n    }\r\n\r\n    const logout = async () => {\r\n        localStorage.setItem(\"user\", JSON.stringify({}))\r\n        await setUser({})\r\n        window.location.reload()\r\n        history.push({ pathname: '/login' })\r\n        // console.log(user)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-content\">\r\n                {navContent}\r\n                <img src=\"/images/logo_transparent.png\" onClick={() => history.push({ pathname: \"/\" })}></img>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Home() {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [loaded, setLoaded] = useState(false);\r\n  useEffect(\r\n    function () {\r\n      if (user) {\r\n        window.localStorage.setItem(\"logged\", true);\r\n        window.localStorage.setItem(\r\n          \"user\",\r\n          JSON.stringify({\r\n            email: user.email,\r\n            id: user.id,\r\n            userType: user.userType,\r\n          })\r\n        );\r\n        const userL = JSON.parse(localStorage.getItem(\"user\"));\r\n        const userLogged = window.localStorage.getItem(\"user\");\r\n        console.log(userL);\r\n        console.log(user);\r\n      }\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const redirectToOrders = () => {\r\n    history.push({\r\n      pathname: \"/orders\",\r\n    });\r\n  };\r\n\r\n  const redirectToAddOrder = () => {\r\n    console.log(user.id);\r\n\r\n    history.push({\r\n      pathname: \"/addorder\",\r\n    });\r\n  };\r\n\r\n  const redirectToMyOrders = () => {\r\n    history.push({\r\n      pathname: \"/myorders/\" + user.id,\r\n      state: { workerId: user.id },\r\n    });\r\n  };\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (user.userType && user.userType == \"client\") {\r\n    console.log(\"client\");\r\n    return (\r\n      <div>\r\n        <button onClick={redirectToAddOrder}>Orders</button>\r\n      </div>\r\n    );\r\n  } else if (user.userType && user.userType == \"worker\") {\r\n    console.log(\"worker\");\r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Orders from \"./orders/Orders\";\r\nimport LoginContainer from \"./auth/LoginContainter\";\r\nimport AddOrder from \"./orders/AddOrder\";\r\nimport MyOrders from \"./orders/MyOrders\";\r\nimport OrderDetail from './orders/OrderDetail'\r\nimport UserOrders from \"./orders/userOrders/UserOrders\";\r\nimport Page404 from './err/Page404'\r\nimport Navbar from './layout/Navbar'\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={{ user, setUser }}>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}></Route>\r\n          <Route path=\"/login\" component={LoginContainer}></Route>\r\n          <Route path=\"/orders\" component={Orders}></Route>\r\n          <Route path=\"/user-orders/:clientId\" component={UserOrders}></Route>\r\n          <Route path=\"/order/:orderId\" component={OrderDetail}></Route>\r\n          <Route path=\"/myorders/:workerId\" component={MyOrders}></Route>\r\n          <Route path=\"/addorder\" component={AddOrder}></Route>\r\n          <Route component={Page404}></Route>\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}